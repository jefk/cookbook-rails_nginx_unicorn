working_directory "<%= @app_root %>/current"
pid "<%= @app_root %>/shared/pids/unicorn.pid"
stderr_path "<%= @app_root %>/shared/log/unicorn.log"
stdout_path "<%= @app_root %>/shared/log/unicorn.log"

listen "/tmp/unicorn.<%= @name %>.sock", :backlog => 64
worker_processes 2
timeout 30

preload_app true
GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = true

# Force the bundler gemfile environment variable to
# reference the capistrano "current" symlink
# This isn't actually needed if deploying directly to the current
# directory like we are, but it's safe and a good thing to have in here in
# case we change that.
before_exec do |_|
  ENV["BUNDLE_GEMFILE"] = File.join("<%= @app_root %>/current", 'Gemfile')
end

before_fork do |server, worker|
  # Disconnect since the database connection will not carry over
  if defined? ActiveRecord::Base
    ActiveRecord::Base.connection.disconnect!
  end

  # Quit the old unicorn process
  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end

after_fork do |server, worker|
  # Start up the database connection again in the worker
  if defined?(ActiveRecord::Base)
    ActiveRecord::Base.establish_connection
  end
end
